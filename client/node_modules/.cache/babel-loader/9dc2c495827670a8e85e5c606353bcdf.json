{"ast":null,"code":"var _jsxFileName = \"/home/chaos/Desktop/generic-constraint-web/src/components/Forms.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withFormik, Field, Form } from 'formik';\nimport OutForm from './OutForm';\nimport styles from './styles.module.css';\nimport * as Yup from 'yup';\nimport ReactLoading from 'react-loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TemplateForms({\n  values,\n  touched,\n  isSubmitting,\n  errors\n}) {\n  _s();\n\n  const constraintTextHolder = \"Constraints \\ne.g.\\nvalue[1] == value[2]\\nvalue[2] + value[3] == 4\";\n  const constraintPythonHolder = `Constraints \\ne.g.\\nconstraint = \"\"\\n for i in range(5):\\n    constraint += f'value[i] != 1\\nreturn constraint`;\n  const domainTextHolder = \"Domain\\ne.g.\\nvalue[1] = [1,2,3]\\nvalue[2] = [2,4,1]\";\n  const domainPythonHolder = `Domain\\ne.g.\\ndomains = \"\"\\nfor i in range(3):\\n    domains += f'value[{i + 1}] = [1,2,3]\\nreturn domains`;\n  const [outState, setOutState] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      className: styles.formStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        name: \"Algo\",\n        className: styles.Algo,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          component: \"select\",\n          name: \"algorithm\",\n          className: styles.dropDown,\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"solve_dfs\",\n            className: styles.dropDownContent,\n            children: \"Depth First Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), \"Select an Algorithm\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        component: \"select\",\n        name: \"format\",\n        className: styles.dropDown,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"python\",\n          children: \"Python\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), touched.variables && errors.variables && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.error,\n        children: errors.variables\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"variables\",\n        placeholder: \"Variables\",\n        className: styles.variable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        component: \"textarea\",\n        name: \"domain\",\n        placeholder: values.format === 'text' ? domainTextHolder : domainPythonHolder,\n        className: styles.domain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        component: \"textarea\",\n        name: \"constraints\",\n        placeholder: values.format === 'text' ? constraintTextHolder : constraintPythonHolder,\n        className: styles.constraint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isSubmitting,\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(OutForm, {\n      value: outState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), isSubmitting && /*#__PURE__*/_jsxDEV(ReactLoading, {\n      type: \"bars\",\n      className: styles.centerAnimation,\n      color: \"#252525\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TemplateForms, \"/QkV0mxeXvpxj1A37Hz1esPpzWQ=\");\n\n_c = TemplateForms;\nconst Forms = withFormik({\n  mapPropsToValues() {\n    return {\n      variables: '',\n      domain: '',\n      constraints: '',\n      algorithm: 'solve_dfs',\n      format: 'text'\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    variables: Yup.string().matches(/^\\d+$/, '*Must be an integer').required('*Required'),\n    constraints: Yup.string()\n  }),\n\n  handleSubmit(values, {\n    setSubmitting\n  }) {\n    fetch(`/api/${values.variables}/${values.algorithm}/${values.format}/?constraint=${values.constraints}&domain=${values.domain}`).then(response => {\n      if (response.ok) {\n        return response.json;\n      } else {\n        throw new Error(respone.text);\n      }\n    }).then(response => {\n      if (response['timed_out']) {\n        setOutState('Timed out');\n      } else if (!response['done']) {\n        setOutState('No solution exists');\n      } else {\n        console.log(response['solution']);\n      }\n    });\n    setSubmitting(false);\n  }\n\n})(TemplateForms);\nexport default Forms;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemplateForms\");","map":{"version":3,"sources":["/home/chaos/Desktop/generic-constraint-web/src/components/Forms.jsx"],"names":["React","useState","withFormik","Field","Form","OutForm","styles","Yup","ReactLoading","TemplateForms","values","touched","isSubmitting","errors","constraintTextHolder","constraintPythonHolder","domainTextHolder","domainPythonHolder","outState","setOutState","formStyle","Algo","dropDown","dropDownContent","variables","error","variable","format","domain","constraint","centerAnimation","Forms","mapPropsToValues","constraints","algorithm","validationSchema","object","shape","string","matches","required","handleSubmit","setSubmitting","fetch","then","response","ok","json","Error","respone","text","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { withFormik, Field, Form } from 'formik'\nimport OutForm from './OutForm'\nimport styles from './styles.module.css'\nimport * as Yup from 'yup'\nimport ReactLoading from 'react-loading'\n\nfunction TemplateForms({values, touched, isSubmitting, errors}){\n    const constraintTextHolder = \"Constraints \\ne.g.\\nvalue[1] == value[2]\\nvalue[2] + value[3] == 4\"\n    const constraintPythonHolder = `Constraints \\ne.g.\\nconstraint = \"\"\\n for i in range(5):\\n    constraint += f'value[i] != 1\\nreturn constraint`\n    const domainTextHolder = \"Domain\\ne.g.\\nvalue[1] = [1,2,3]\\nvalue[2] = [2,4,1]\"\n    const domainPythonHolder = `Domain\\ne.g.\\ndomains = \"\"\\nfor i in range(3):\\n    domains += f'value[{i + 1}] = [1,2,3]\\nreturn domains`\n\n    const [outState, setOutState] = useState('')\n\n    return (\n        <div>\n            <Form className={styles.formStyle}>\n                <label name=\"Algo\" className = {styles.Algo} >\n                <Field component=\"select\" name=\"algorithm\" className={styles.dropDown}>\n                    <option value=\"solve_dfs\" className={styles.dropDownContent}>Depth First Search</option>\n                </Field>\n                Select an Algorithm\n                </label>\n                <br/>\n                <Field component=\"select\" name=\"format\" className={styles.dropDown}>\n                    <option value=\"text\">Text</option>\n                    <option value=\"python\">Python</option>\n                </Field>\n                <br/>\n                {touched.variables && errors.variables && <p className={styles.error}>{errors.variables}</p>}\n                <Field name=\"variables\" placeholder=\"Variables\" className={styles.variable}/>\n                <br/> \n                <Field component=\"textarea\" name=\"domain\" placeholder={values.format === 'text'? domainTextHolder: domainPythonHolder} className={styles.domain}/>\n                <br/>\n                <Field component=\"textarea\" name=\"constraints\" placeholder={values.format === 'text'? constraintTextHolder: constraintPythonHolder} className={styles.constraint}></Field>\n                <br/>\n                <button disabled={isSubmitting} type = \"submit\" className=\"btn\">Run</button>\n            </Form>\n            <OutForm value={outState}/>\n            {isSubmitting && <ReactLoading type={\"bars\"} className={styles.centerAnimation} color=\"#252525\"/>}\n        </div>\n        \n    )\n}\n\nconst Forms = withFormik({\n    mapPropsToValues(){\n        return {\n            variables: '',\n            domain:'',\n            constraints: '',\n            algorithm: 'solve_dfs',\n            format: 'text'\n        }\n    },\n    validationSchema: Yup.object().shape({\n        variables: Yup.string().matches(/^\\d+$/, '*Must be an integer').required('*Required'),\n        constraints: Yup.string(),\n    }),\n    handleSubmit(values, {setSubmitting}){\n        fetch(`/api/${values.variables}/${values.algorithm}/${values.format}/?constraint=${values.constraints}&domain=${values.domain}`).then(response => {\n            if (response.ok){\n                return response.json\n            }\n            else {\n                throw new Error(respone.text)\n            }\n        }).then(response => {\n            if(response['timed_out']){\n                setOutState('Timed out')\n            }\n            else if(!response['done']){\n                setOutState('No solution exists')\n            }\n            else {\n                console.log(response['solution'])\n            }\n        })\n        setSubmitting(false)\n    }\n})(TemplateForms)\n\nexport default Forms"]},"metadata":{},"sourceType":"module"}