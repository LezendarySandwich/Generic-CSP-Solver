{"ast":null,"code":"var _jsxFileName = \"/home/chaos/Desktop/generic-constraint-web/src/components/Forms.jsx\";\nimport { withFormik, Field, Form } from 'formik';\nimport OutForm from './OutForm';\nimport styles from './styles.module.css';\nimport * as Yup from 'yup';\nimport { Spinner } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SpinnerPage = () => {\n  return /*#__PURE__*/_jsxDEV(Spinner, {\n    className: \"Spinner\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: LoaderImg,\n      className: \"Spinner-Img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SpinnerPage;\n\nfunction TemplateForms({\n  values,\n  touched,\n  isSubmitting,\n  errors\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      className: styles.formStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          component: \"select\",\n          name: \"algorithm\",\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"dfs\",\n            children: \"Depth First Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), \"Algorithm\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), touched.variables && errors.variables && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.error,\n        children: errors.variables\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        type: \"text\",\n        name: \"variables\",\n        placeholder: \"Variables\",\n        className: styles.variable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        type: \"text\",\n        component: \"textarea\",\n        name: \"constraints\",\n        placeholder: \"Constraints \\n e.g. value[1] == value[2]\",\n        className: styles.constraint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isSubmitting,\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(OutForm, {\n      value: values\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), SpinnerPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = TemplateForms;\nconst Forms = withFormik({\n  mapPropsToValues() {\n    return {\n      variables: '',\n      constraints: '',\n      algorithm: ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    variables: Yup.string().matches(/^\\d+$/, '*Must be an integer').required('*Required'),\n    constraints: Yup.string()\n  }),\n\n  handleSubmit(values, {\n    setSubmitting\n  }) {\n    console.log(values);\n    setSubmitting(false);\n  }\n\n})(TemplateForms);\nexport default Forms;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SpinnerPage\");\n$RefreshReg$(_c2, \"TemplateForms\");","map":{"version":3,"sources":["/home/chaos/Desktop/generic-constraint-web/src/components/Forms.jsx"],"names":["withFormik","Field","Form","OutForm","styles","Yup","Spinner","SpinnerPage","LoaderImg","TemplateForms","values","touched","isSubmitting","errors","formStyle","variables","error","variable","constraint","Forms","mapPropsToValues","constraints","algorithm","validationSchema","object","shape","string","matches","required","handleSubmit","setSubmitting","console","log"],"mappings":"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","sourcesContent":["import { withFormik, Field, Form } from 'formik'\nimport OutForm from './OutForm'\nimport styles from './styles.module.css'\nimport * as Yup from 'yup'\nimport {Spinner} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst SpinnerPage = () => {\n    return (\n        <Spinner className=\"Spinner\">\n        <img src={LoaderImg} className=\"Spinner-Img\"/>\n        </Spinner>\n    )}\n\nfunction TemplateForms({values, touched, isSubmitting, errors}){\n    return (\n        <div>\n            <Form className={styles.formStyle}>\n                <label>\n                <Field component=\"select\" name=\"algorithm\">\n                    <option value=\"dfs\">Depth First Search</option>\n                </Field>\n                Algorithm\n                </label>\n                <br/>\n                {touched.variables && errors.variables && <p className={styles.error}>{errors.variables}</p>}\n                <Field type=\"text\" name=\"variables\" placeholder=\"Variables\" className={styles.variable}/>\n                <br/> \n                <Field type=\"text\" component=\"textarea\" name=\"constraints\" placeholder={\"Constraints \\n e.g. value[1] == value[2]\"} className={styles.constraint}></Field>\n                <br/>\n                <button disabled={isSubmitting} type = \"submit\" className=\"btn\">Run</button>\n            </Form>\n            <OutForm value={values}/>\n            {SpinnerPage()}\n        </div>\n    )\n}\n\nconst Forms = withFormik({\n    mapPropsToValues(){\n        return {\n            variables: '',\n            constraints: '',\n            algorithm: '',\n        }\n    },\n    validationSchema: Yup.object().shape({\n        variables: Yup.string().matches(/^\\d+$/, '*Must be an integer').required('*Required'),\n        constraints: Yup.string(),\n    }),\n    handleSubmit(values, {setSubmitting}){\n        console.log(values)\n        setSubmitting(false)\n    }\n})(TemplateForms)\n\nexport default Forms"]},"metadata":{},"sourceType":"module"}